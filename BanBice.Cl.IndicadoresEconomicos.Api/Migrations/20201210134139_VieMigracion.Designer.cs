// <auto-generated />
using System;
using BanBice.Cl.IndicadoresEconomicos.Api.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BanBice.Cl.IndicadoresEconomicos.Api.Migrations
{
    [DbContext(typeof(IndicadoresEconomicosContext))]
    [Migration("20201210134139_VieMigracion")]
    partial class VieMigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("BanBice.Cl.IndicadoresEconomicos.Api.Entities.AlertaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoInidicador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DentroDelTramo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Desde")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Hasta")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("BanBice.Cl.IndicadoresEconomicos.Api.Entities.FavoritoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoInidicador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Favoritos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16afa769-a30c-4c13-9bee-79cee2c4e312"),
                            CodigoInidicador = "uf",
                            UsuarioId = new Guid("b3eef3ec-3fb5-4025-8490-b92ae7f4336f")
                        },
                        new
                        {
                            Id = new Guid("e92a53a8-23a5-457a-9925-c907bcc3ffa5"),
                            CodigoInidicador = "dolar",
                            UsuarioId = new Guid("b3eef3ec-3fb5-4025-8490-b92ae7f4336f")
                        },
                        new
                        {
                            Id = new Guid("91cdb820-0380-4340-ace9-dd4291f0384c"),
                            CodigoInidicador = "euro",
                            UsuarioId = new Guid("b3eef3ec-3fb5-4025-8490-b92ae7f4336f")
                        },
                        new
                        {
                            Id = new Guid("63f232e1-4c45-433a-8d4b-5b90691e1aee"),
                            CodigoInidicador = "tasa_desempleo",
                            UsuarioId = new Guid("cec0a7bc-ea1d-4c9d-ac5f-457ff4cda1c4")
                        },
                        new
                        {
                            Id = new Guid("f2f3705c-99f5-49c9-af0a-7f4909f808ca"),
                            CodigoInidicador = "bitcoin",
                            UsuarioId = new Guid("cec0a7bc-ea1d-4c9d-ac5f-457ff4cda1c4")
                        });
                });

            modelBuilder.Entity("BanBice.Cl.IndicadoresEconomicos.Api.Entities.NotificacionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlertaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoInidicador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlertaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("BanBice.Cl.IndicadoresEconomicos.Api.Entities.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("CorreoValidado")
                        .HasColumnType("bit");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("EnvioNewsletter")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaEnvioValidacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("HashContrasenna")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("IdValidacionCorreo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Intentos")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SaltContrasenna")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3eef3ec-3fb5-4025-8490-b92ae7f4336f"),
                            Bloqueado = false,
                            Correo = "flavio.luna@bittobyte.cl",
                            CorreoValidado = true,
                            Edad = 33,
                            EnvioNewsletter = false,
                            FechaEnvioValidacion = new DateTime(2020, 12, 10, 10, 41, 38, 208, DateTimeKind.Local).AddTicks(6420),
                            HashContrasenna = "xEZGXRDuFMHMP7gp2fBOgEv4hIezygVHSfyFMt5zprU=",
                            IdValidacionCorreo = new Guid("109aa977-8a82-432e-a2b5-b4d5c5d9a20d"),
                            Intentos = 0,
                            NombreCompleto = "Flavio Luna",
                            SaltContrasenna = "CzLFpSrR/Zj9hPUHvbR+fLQ6lkM="
                        },
                        new
                        {
                            Id = new Guid("cec0a7bc-ea1d-4c9d-ac5f-457ff4cda1c4"),
                            Bloqueado = false,
                            Correo = "maria.damianovic@bice.cl",
                            CorreoValidado = false,
                            Edad = 33,
                            EnvioNewsletter = false,
                            FechaEnvioValidacion = new DateTime(2020, 12, 10, 10, 41, 38, 216, DateTimeKind.Local).AddTicks(4641),
                            HashContrasenna = "LPIHMyyoP9IHZys0rt5MYtMgNLu2/SwzHX2mnW0KRps=",
                            IdValidacionCorreo = new Guid("48e75466-d11c-4c58-8ec7-68204934956f"),
                            Intentos = 0,
                            NombreCompleto = "Maria Eugenia Damianovic",
                            SaltContrasenna = "CzLFpSrR/Zj9hPUHvbR+fLQ6lkM="
                        },
                        new
                        {
                            Id = new Guid("7649de4b-27fa-4a2e-a49b-d217b6a43368"),
                            Bloqueado = true,
                            Correo = "bloqueado@bice.cl",
                            CorreoValidado = true,
                            Edad = 33,
                            EnvioNewsletter = false,
                            FechaEnvioValidacion = new DateTime(2020, 11, 10, 10, 41, 38, 216, DateTimeKind.Local).AddTicks(5112),
                            HashContrasenna = "1y3DFxTWwM+ujIoM0N9IRo6XsYDuJ61XJPxtpQVeDu8=",
                            IdValidacionCorreo = new Guid("8493b383-5718-428a-b876-b774a7d1d749"),
                            Intentos = 0,
                            NombreCompleto = "Usuario Bloqueado",
                            SaltContrasenna = "CzLFpSrR/Zj9hPUHvbR+fLQ6lkM="
                        });
                });

            modelBuilder.Entity("BanBice.Cl.IndicadoresEconomicos.Api.Entities.AlertaEntity", b =>
                {
                    b.HasOne("BanBice.Cl.IndicadoresEconomicos.Api.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BanBice.Cl.IndicadoresEconomicos.Api.Entities.FavoritoEntity", b =>
                {
                    b.HasOne("BanBice.Cl.IndicadoresEconomicos.Api.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BanBice.Cl.IndicadoresEconomicos.Api.Entities.NotificacionEntity", b =>
                {
                    b.HasOne("BanBice.Cl.IndicadoresEconomicos.Api.Entities.AlertaEntity", "Alerta")
                        .WithMany()
                        .HasForeignKey("AlertaId");

                    b.HasOne("BanBice.Cl.IndicadoresEconomicos.Api.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Alerta");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
